#include <stdio.h>
#include <string.h>
#include <stdbool.h>

#define MAX 168
//飞机荷载168人 
int limit;//权限 
/*	
	员工：
		录入
		修改航班信息 
		用户 ：
			查询
			订票
			退票 
*/
int choice;//选择服务 
//创建航线结构体，定义数组line储存航线信息 
struct node{
	char fight[10];	//航班名称 
	int up_year,up_month,up_day,up_hour,up_min;//起飞 年月日时分 
	int off_year,off_month,off_day,off_hour,off_min;// 降落年月日时分 
	char up_pos[10];	//起飞地点 
	char off_pos[10];	//降落地点 
	double price;		//票价 
	double discount;	//折扣 
	int num;			//飞机上人数 
}line[1000];
void print()
{
	/*
	printf("请输入您的账号：\n");
	char username[11];
	scanf("%s",username);
	printf("请输入您的密码:\n");
	char secret[20];
	*/
	printf("请输入您的权限:\n"); 
	scanf("%d",&limit);
	printf("-----------------------------\n");
	printf("   计信学院航空公司欢迎您！\n");
	printf("1.查询航班\n");
	printf("2.订票服务\n");
	printf("3.退订服务\n"); 
	if(limit == 1){
		printf("4.录入航班信息\n");
		printf("5.修改航班信息\n"); 
	} 
	printf("-----------------------------\n");
	printf("请输入您选择的服务\n");
	
	bool judge = false;
	while(!judge){
		fflush(stdin);
		double data;
		scanf("%lf",&data);
		if(data>5 || data<1|| data!=(int)data) printf("输入错误，请重新输入：\n");
		else if(limit==0&&4<=data&&data<=5) printf("输入错误，请重新输入：\n");
		else {
			judge = true;
			choice = (int)data;
		}
	} 
	
}
void first(){
	//需要在同一个文件夹内，新建两个文件，分别为
	//航班信息文件(airline.txt)：航班号、起飞降落 时间地点、票价、折扣、每趟航班已有人数 
	//乘客信息文件(passenger.txt)：姓名、身份证号、订票数 、航班 
}
void checkin()
{
	// 打开乘客信息文件 
	// 录入信息 
		//输入乘客姓名、身份证号、 订票数 、航班 
		//若满员 ，推荐相关航班
			/*推荐中转*/
			/*选择相关航班，可以不再重复输入信息*/
		//若没满员，写入乘客信息文件 
	//关闭乘客信息文件 
}
void checkout()
{
	//打开乘客信息文件
	// 录入信息 
		//输入乘客姓名、身份证
		//确认是否退票
		//修改文件内信息 
	//关闭乘客信息文件 
}
void search()
{
	// 打开航班信息 
	// 录入信息 
	printf("-----------------------------\n");
	FILE *file;
	file = fopen("airline.txt","r");
	if(file==NULL)//如果未打开就提示读取错误
	{
	printf("read error");
	return ;
	} 
	int NUM=0;
	int i=0;
	while(!feof(file)){
		fscanf(file,"%s",line[i].fight);
		fscanf(file,"%d/%d/%d/%d:%d",&line[i].up_year,&line[i].up_month,&line[i].up_day,
		&line[i].up_hour,&line[i].up_min);
		fscanf(file,"%d/%d/%d/%d:%d",&line[i].off_year,&line[i].off_month,&line[i].off_day,
		&line[i].off_hour,&line[i].off_min);
		fgets(line[i].up_pos,10,file);
		fgets(line[i].off_pos,10,file);
		//fscanf(file,"%s",line[i].up_pos);
		//fscanf(file,"%s",line[i].off_pos);
		fscanf(file,"￥%lf",&line[i].price);
		fscanf(file,"%lf%",&line[i].discount);
		fscanf(file,"%lf",&line[i].num);
		i++;
	} 
	NUM = i;
	printf("1)根据航班号查询\n");
	printf("2)根据起飞，降落城市查询\n");
	printf("请输入查询方式(1或2)：\n");
	int way;
	bool judge = false;
	while(!judge){
		scanf("%d",&way);
		if(way==1||way==2) judge = true;
		else printf("输入错误，请重新输入：\n"); 
	}
	if(way == 1){
		printf("   请输入查询航班号：\n");
		char number[10];
		judge = false;
		while(!judge){
			scanf("%s",number);
			if(number[0]!='C'||number[1]!='A') printf("您输入的航班号格式有误，请重新输入：\n");
			else if(number[2]<'1'||number[2]>'9'||number[3]<'1'||number[3]>'9') printf("您输入的航班号格式有误，请重新输入：\n");
			else if(number[4]!='0' || (number[5]!='1')&&number[5]!='2') printf("您输入的航班号格式有误，请重新输入：\n");
			else if(strlen(number)!=6) printf("您输入的航班号格式有误，请重新输入：\n");
			else judge = true;
		}
		/*
		int l=0,r=NUM;
		int mid = (l+r)/2; 
		while(l<r){
			if(strcmp(line[mid].fight,number)<0) mid = l+1;
			else r = mid;
			mid = (l+r)/2;
		}*/
		for(int i=0;i<NUM;i++){
			if(strcmp(line[i].fight,number)==0)
			{
				int mid = i;
				printf("起飞时间：%d/%02d/%02d/%02d:%02d\n",line[mid].up_year,line[mid].up_month,line[mid].up_day,line[mid].up_hour,line[mid].up_min);
				printf("降落时间：%d/%02d/%02d/%02d:%02d\n",line[mid].off_year,line[mid].off_month,line[mid].off_day,line[mid].off_hour,line[mid].off_min);
				printf("起飞地点：%s\n",line[mid].up_pos);
				printf("降落地点：%s\n",line[mid].off_pos);
				printf("航班票价：￥%.2lf\n",line[mid].price);
				printf("票价折扣：%.lf%%\n",line[mid].discount);
				printf("是否满仓：");
				if(line[mid].num==MAX) printf("是\n");
				else printf("否\n");
				break;
			}
		}
	}  
	else{
		printf("请输入你的出发地、及目的地：\n");
		char map[10][5]={{" "},{"华北"},{"西北"},{"华南"},{"西南"},{"华东"},{"东北"},{"厦门"},{"新疆"}};
		char start_pos[10],end_pos[10];
		bool flag = false;
		int index1,index2;
		while(!flag){
			scanf("%s",start_pos);
			for(int i=1;i<10;i++){
				if(strcmp(map[i],start_pos)==0){
					index1 = i;
					flag=true;
					break;
				}	
			}
			if(!flag) printf("您输入的城市不在我司航线上，请重新输入：\n");
		}
		flag = false;
		while(!flag){
			scanf("%s",start_pos);
			for(int i=1;i<10;i++){
				if(strcmp(map[i],start_pos)==0 && strcmp(start_pos,end_pos)!=0){
					index2 = i;
					flag=true;
					break;
				}	
			}
			if(strcmp(start_pos,end_pos)==0) printf("您输入的目的地与出发地相同，请重新输入：\n");
			if(!flag) printf("您输入的城市不在我司航线上，请重新输入：\n");
		}
		printf("由%s飞往%s的航班有：\n",map[index1],map[index2]);
		for(int i=0;i<NUM;i++){
			if(line[i].fight[5]=='1'&&line[i].fight[2]==index1+'0' && line[i].fight[3]==index2+'0') printf("%s\n",line[i].fight);
			else if(line[i].fight[5]=='2'&&line[i].fight[3]==index1+'0' && line[i].fight[2]==index2+'0') printf("%s\n",line[i].fight);
		}
	}
	fclose(file); 
}
void input()
{
	// 打开航班信息 
		// 录入信息 
		//按航班号进行排序 
	//关闭航班信息文件 
	
}
void change()
{
	// 打开航班信息 
	// 录入信息 
		//修改分两类：更改 or 删除
		//若更改，把结构体内信息更改
		//若删除，把后面覆盖前面 struct[i-1]=struct[i] 
	//关闭航班信息文件 
}
int main(){
	print();
	switch(choice)
	{
		case 1: search(); break;
		case 2: checkin(); break;
		case 3: checkout(); break;
		case 4: input(); break;
		default: change();
	}
	return 0;
} 
